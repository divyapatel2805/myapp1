name: Deploy Service - TEST1
on: 
   workflow_dispatch:

jobs:
  ReadJSON:
    name: "Reading JSON Object"
    runs-on: ubuntu-latest
    outputs:
      service-deployment-env: ${{ steps.export-service-deployment-matrix.outputs.service-deployment-env }}
    steps:
    - uses: actions/checkout@v2

    - name: Export deployment matrix
      id: export-service-deployment-matrix
      run: |
        
        Env="$(cat ./deployment-config.json | jq '.[]' | jq '.regions[]' | jq '.locations[]' | jq '.envTypes[]' | jq '.envs[]' | jq -s '.' )"
        Env="${Env//'%'/'%25'}"
        Env="${Env//$'\n'/'%0A'}"
        Env="${Env//$'\r'/'%0D'}"

        echo "::set-output name=service-deployment-env::$Env"

        echo "Env: " $Env

  EnvironmentsToDeployService:
    name: "${{ matrix.environment.Ring }}-${{ matrix.environment.Region }}-${{ matrix.environment.Location }}-${{ matrix.environment.EnvType }}-${{ matrix.environment.displayName }}"
    runs-on: ubuntu-latest
    needs: [ReadJSON]
    strategy:
      matrix:
        environment: ${{ fromJSON(needs.ReadJSON.outputs.service-deployment-env) }}
    steps:
    - run: |
            echo "displayName: ${{ matrix.environment.displayName }}"
            echo "approvalStageEnv: ${{ matrix.environment.approvalStageEnv }}"
            echo "environmentResourceGroup: ${{ matrix.environment.environmentResourceGroup }}"
            echo "environment: ${{ matrix.environment.environment }}"
            echo "environmentCode: ${{ matrix.environment.environmentCode }}"
      

    
 
